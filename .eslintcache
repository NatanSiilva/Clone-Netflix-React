[{"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/index.js":"1","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Header/index.js":"2","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/App.js":"3","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/Tmdb.js":"4","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/FeaturedMovie/index.js":"5","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/MovieRow/index.js":"6","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Footer/index.js":"7"},{"size":202,"mtime":1610044233332,"results":"8","hashOfConfig":"9"},{"size":638,"mtime":1610051807495,"results":"10","hashOfConfig":"9"},{"size":1886,"mtime":1610057609144,"results":"11","hashOfConfig":"9"},{"size":2705,"mtime":1610043626841,"results":"12","hashOfConfig":"9"},{"size":2081,"mtime":1610058988077,"results":"13","hashOfConfig":"9"},{"size":1665,"mtime":1610057707961,"results":"14","hashOfConfig":"9"},{"size":498,"mtime":1610051993880,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4kk9cq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/index.js",[],["34","35"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Header/index.js",["36","37","38"],"import React from 'react'\nimport './Header.css'\n\nexport default ({black}) => {\n    \n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\"/>\n                </a>\n            </div>\n            \n            <div className=\"header--user\">\n            \n                <a href=\"/\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"/>\n                </a>\n            </div>\n        </header>\n    );\n}","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/App.js",["39"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/Tmdb.js",["40"],"const APY_KEY = '9bffcfd9f4d7c8555ea50ead444af8f2';\nconst APY_BASE = 'https://api.themoviedb.org/3';\n\n/*\n    -originais da netflix\n    - recomendados (trending)\n    - em alta (top rated)\n    - aÃ§Ã£o\n    - comedia \n    - terror\n    - romance\n    - documentÃ¡rios\n*/\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${APY_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais do Netflix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'trending',\n                title: 'Recomendados para VocÃª',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'toprated',\n                title: 'Em Alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'action',\n                title: 'AÃ§Ã£o',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'comedy',\n                title: 'Comedia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'documentary',\n                title: 'DocumentÃ¡rios',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${APY_KEY}`)\n            },\n        ];\n    },\n\n    getMovieInfo: async (movieId, type) => {\n        let info = {}\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${APY_KEY}`)\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${APY_KEY}`)\n                break;\n                default:\n                    info = null\n                break;\n            }\n        }\n\n        return info\n    } \n}","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/FeaturedMovie/index.js",["41"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/MovieRow/index.js",["42"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Footer/index.js",["43"],"import React from 'react'\nimport './Footer.css'\n\nexport default () => {\n    return (\n        <footer>\n            <p>\n                Feito com <span role=\"img\" aria-label=\"CoraÃ§Ã£o\">ðŸ’œ</span> <a href=\"https://natanaelsilva.vercel.app/\" target=\"blanck\">Natanael Silva</a>\n            </p>\n            <p>\n                Direitos de imagem para Netflix <br/>\n                Dados pegos do site <a href=\"https://www.themoviedb.org/\">Themoviedb.org</a>\n            </p>\n        </footer>\n    );\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":22,"endColumn":2},{"ruleId":"51","severity":1,"message":"52","line":10,"column":21,"nodeType":"53","endLine":10,"endColumn":104},{"ruleId":"51","severity":1,"message":"52","line":17,"column":21,"nodeType":"53","endLine":17,"endColumn":111},{"ruleId":"48","severity":1,"message":"49","line":9,"column":1,"nodeType":"50","endLine":71,"endColumn":3},{"ruleId":"48","severity":1,"message":"54","line":22,"column":1,"nodeType":"50","endLine":94,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":54,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":5,"column":1,"nodeType":"50","endLine":51,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":16,"endColumn":2},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]