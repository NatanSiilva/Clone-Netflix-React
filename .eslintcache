[{"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/index.js":"1","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Header/index.js":"2","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/App.js":"3","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/Tmdb.js":"4","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/FeaturedMovie/index.js":"5","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/MovieRow/index.js":"6","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Footer/index.js":"7","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/index.js":"8","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/app/App.js":"9","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/app/Tmdb.js":"10","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/MovieRow/index.js":"11","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/FeaturedMovie/index.js":"12","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/Header/index.js":"13","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/Footer/index.js":"14"},{"size":202,"mtime":1610044233332,"results":"15","hashOfConfig":"16"},{"size":638,"mtime":1610051807495,"results":"17","hashOfConfig":"16"},{"size":1886,"mtime":1610057609144,"results":"18","hashOfConfig":"16"},{"size":2705,"mtime":1610043626841,"results":"19","hashOfConfig":"16"},{"size":2081,"mtime":1610058988077,"results":"20","hashOfConfig":"16"},{"size":1665,"mtime":1610057707961,"results":"21","hashOfConfig":"16"},{"size":498,"mtime":1610051993880,"results":"22","hashOfConfig":"16"},{"size":202,"mtime":1610117002515,"results":"23","hashOfConfig":"24"},{"size":1886,"mtime":1610118847655,"results":"25","hashOfConfig":"24"},{"size":2705,"mtime":1610043626841,"results":"26","hashOfConfig":"24"},{"size":1665,"mtime":1610057707961,"results":"27","hashOfConfig":"24"},{"size":2081,"mtime":1610058988077,"results":"28","hashOfConfig":"24"},{"size":638,"mtime":1610051807495,"results":"29","hashOfConfig":"24"},{"size":498,"mtime":1610051993880,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"4kk9cq",{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1xvazjf",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"51"},"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/index.js",[],["68","69"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Header/index.js",["70","71","72"],"import React from 'react'\nimport './Header.css'\n\nexport default ({black}) => {\n    \n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\"/>\n                </a>\n            </div>\n            \n            <div className=\"header--user\">\n            \n                <a href=\"/\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"/>\n                </a>\n            </div>\n        </header>\n    );\n}","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/App.js",["73"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/app/Tmdb.js",["74"],"const APY_KEY = '9bffcfd9f4d7c8555ea50ead444af8f2';\nconst APY_BASE = 'https://api.themoviedb.org/3';\n\n/*\n    -originais da netflix\n    - recomendados (trending)\n    - em alta (top rated)\n    - aÃ§Ã£o\n    - comedia \n    - terror\n    - romance\n    - documentÃ¡rios\n*/\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${APY_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais do Netflix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'trending',\n                title: 'Recomendados para VocÃª',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'toprated',\n                title: 'Em Alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'action',\n                title: 'AÃ§Ã£o',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'comedy',\n                title: 'Comedia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${APY_KEY}`)\n            },\n\n            {\n                slug: 'documentary',\n                title: 'DocumentÃ¡rios',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${APY_KEY}`)\n            },\n        ];\n    },\n\n    getMovieInfo: async (movieId, type) => {\n        let info = {}\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${APY_KEY}`)\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${APY_KEY}`)\n                break;\n                default:\n                    info = null\n                break;\n            }\n        }\n\n        return info\n    } \n}","/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/FeaturedMovie/index.js",["75"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/MovieRow/index.js",["76"],"/home/natanjs/Documentos/Projetos/GitHub/netflixclone/src/components/Footer/index.js",["77"],"import React from 'react'\nimport './Footer.css'\n\nexport default () => {\n    return (\n        <footer>\n            <p>\n                Feito com <span role=\"img\" aria-label=\"CoraÃ§Ã£o\">ðŸ’œ</span> <a href=\"https://natanaelsilva.vercel.app/\" target=\"blanck\">Natanael Silva</a>\n            </p>\n            <p>\n                Direitos de imagem para Netflix <br/>\n                Dados pegos do site <a href=\"https://www.themoviedb.org/\">Themoviedb.org</a>\n            </p>\n        </footer>\n    );\n}","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/index.js",[],["78","79"],"/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/app/App.js",["80"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Tmdb from \"./Tmdb\";\nimport MovieRow from \"../components/MovieRow\";\nimport FeaturedMovie from \"../components/FeaturedMovie\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\n\nexport default () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setblackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter((item) => item.slug === \"originals\");\n      let randonChosen = Math.floor(\n        Math.random() * (originals[0].items.results.length - 1)\n      );\n      let chosen = originals[0].items.results[randonChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\");\n      setFeaturedData(chosenInfo);\n    };\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setblackHeader(true);\n      } else {\n        setblackHeader(false);\n      }\n    };\n\n    window.addEventListener(\"scroll\", scrollListener);\n\n    return () => {\n      window.removeEventListener(\"scroll\", scrollListener);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n\n      {featuredData && <FeaturedMovie item={featuredData} />}\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <Footer />\n\n      {movieList.length <= 0 && (\n        <div className=\"loading\">\n          <img\n            src=\"https://tenor.com/view/netflix-loading-gif-6089689.gif\"\n            alt=\"Carregando\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/app/Tmdb.js",["81"],"/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/MovieRow/index.js",["82"],"import React, { useState } from 'react';\nimport './MovieRow.css';\n\n\nexport default ({title, items}) => {\n\n    const [scrollx, setScrollX] = useState(0)\n\n    const handleLeftArrow = () => {\n        let x = scrollx + Math.round(window.innerWidth / 2)\n        if(x > 0) {\n            x = 0\n        }\n        setScrollX(x)\n    }\n\n    const handleRightArrow = () => {\n        let x = scrollx - Math.round(window.innerWidth / 2)\n        let listWidth = items.results.length * 150\n        if((window.innerWidth - listWidth) > x) {\n            x = (window.innerWidth - listWidth) - 60\n        }\n\n        setScrollX(x)\n    }\n\n    return (\n        <div className=\"movieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n                <i className=\"material-icons\" style={{fontSize: 50}}>navigate_before</i>\n            </div>\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\n                <i className=\"material-icons\" style={{fontSize: 50}}>navigate_next</i>\n            </div>\n\n            <div className=\"movieRow--listarea\">\n                <div className=\"movieRow--list\" style={{\n                    marginLeft: scrollx,\n                    width: items.results.length * 150\n                }}>\n                    {items.results.length > 0 && items.results.map((item, key) => (\n                        <div key={key} className=\"movieRow--item\">\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}",["83","84"],"/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/FeaturedMovie/index.js",["85"],"import React from 'react'\nimport './FeaturedMovie.css'\n\nexport default ({item}) => {\n    console.log(item)\n\n    let firtDate = new Date(item.first_air_date)\n    let genres = []\n    for(let i in item.genres) {\n        genres.push(item.genres[i].name)\n    } \n\n    let description = item.overview\n    if(description.length > 200) {\n        description = description.substring(0, 200)+'...'\n    }\n \n    return (\n        <section className=\"featured\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage:`url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n\n                    <div className=\"featured--name\">{item.original_name}</div>\n\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\n                        <div className=\"featured--year\">{firtDate.getFullYear()}</div>\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n\n                    <div className=\"featured--description\">{description}</div>\n\n                    <div className=\"featured--buttons\">\n                        <div className=\"featured--watchbutton\" >\n                            <i class=\"material-icons\">play_arrow</i>\n                            <a href={`/watch/${item.id}`} >  Assistir</a>\n                        </div>\n                        <div className=\"featured--mylistbutton\">\n                            <i class=\"material-icons\">add</i>\n                            <a href={`/list/add/${item.id}`} > Minha Lista</a>\n                        </div>\n                    </div>\n                    <div className=\"featured-genres\">\n                        <strong>GÃªneros:</strong>{genres.join(', ')}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}","/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/Header/index.js",["86","87","88"],"/home/natanjs/Documentos/Projetos/GitHub/Clone-Netflix-React/src/components/Footer/index.js",["89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":22,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":10,"column":21,"nodeType":"99","endLine":10,"endColumn":104},{"ruleId":"97","severity":1,"message":"98","line":17,"column":21,"nodeType":"99","endLine":17,"endColumn":111},{"ruleId":"94","severity":1,"message":"95","line":9,"column":1,"nodeType":"96","endLine":71,"endColumn":3},{"ruleId":"94","severity":1,"message":"100","line":22,"column":1,"nodeType":"96","endLine":94,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":54,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":51,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":16,"endColumn":2},{"ruleId":"90","replacedBy":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":1,"nodeType":"96","endLine":71,"endColumn":3},{"ruleId":"94","severity":1,"message":"100","line":22,"column":1,"nodeType":"96","endLine":94,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":51,"endColumn":2},{"ruleId":"90","replacedBy":"103"},{"ruleId":"92","replacedBy":"104"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":54,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":22,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":10,"column":21,"nodeType":"99","endLine":10,"endColumn":104},{"ruleId":"97","severity":1,"message":"98","line":17,"column":21,"nodeType":"99","endLine":17,"endColumn":111},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":16,"endColumn":2},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign object to a variable before exporting as module default",["105"],["106"],["105"],["106"],"no-global-assign","no-unsafe-negation"]